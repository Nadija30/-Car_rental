{"version":3,"file":"static/js/62.33849f28.chunk.js","mappings":"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","sources":["components/CarsList/CarsList.jsx","components/FiltersCars/FiltersCars.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport Button from '../Button';\n\nimport { COUNT_CARS } from '../../shared/constants';\n\nimport { useLoadMore } from '../../shared/hooks';\nimport { filteredCars } from '../../shared/utils';\nimport CarItem from '../CarItem/CarItem';\n\nconst CarsList = ({ adverts }) => {\n  const [currentPage, carsLimit, loadMore] = useLoadMore(COUNT_CARS);\n\n  const indexOfLastCar = currentPage * carsLimit;\n  return (\n    <>\n      <ul className=\"cards-list\">\n        {filteredCars(adverts, indexOfLastCar).map(car => (\n          <CarItem car={car} key={car.id} />\n        ))}\n      </ul>\n      {adverts?.length >= indexOfLastCar && (\n        <Button className=\"button-load\" label=\"Load more\" onClick={loadMore} />\n      )}\n    </>\n  );\n};\n\nCarsList.propTypes = {\n  adverts: PropTypes.array,\n};\n\nexport default CarsList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport { useUniquePropValues } from '../../shared/hooks';\nimport { resetFilter, setFilter } from '../../redux/cars/carsSlise';\nimport { selectFilter } from '../../redux/cars/carsSelectors';\nimport { priceOptions } from '../../shared/utils';\nimport Button from '../Button';\n\nexport const FiltersCars = ({ cars }) => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const { pathname } = useLocation();\n\n  const isFormDisabled = pathname === '/favorites' && cars?.length === 0;\n\n  const price = priceOptions(cars);\n  const uniqueBrands = useUniquePropValues(cars, 'make');\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n    shouldDisable: isFormDisabled,\n  });\n\n  useEffect(() => {\n    reset(filter);\n  }, [filter, reset]);\n\n  const onSubmit = data => {\n    dispatch(setFilter(data));\n  };\n\n  const resetFilterInRedux = () => {\n    dispatch(resetFilter());\n    reset({\n      brand: '',\n      price: '',\n      from: '',\n      to: '',\n    });\n  };\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      className={`form flex-wrap px-3 ${\n        isFormDisabled ? 'pointer-events-none opacity-60' : ''\n      }`}\n      disabled={isFormDisabled}\n    >\n      <div className=\"flex flex-wrap items-center justify-between gap-2\">\n        <div className=\"form mb-2 flex-wrap items-center gap-3\">\n          <div className=\"select-wrapper mb-2\">\n            <label htmlFor=\"brand\" className=\"select-label\">\n              Car brand\n            </label>\n            <Controller\n              name=\"brand\"\n              control={control}\n              rules={{ required: true, message: 'Brand is required' }}\n              render={({ field }) => (\n                <>\n                  <select {...field} className=\"select-brand\">\n                    <option value=\"\" className=\"select-placeholder\">\n                      Enter the text\n                    </option>\n                    {uniqueBrands &&\n                      uniqueBrands.map((make, idx) => (\n                        <option key={idx} value={make} className=\"select-text\">\n                          {make}\n                        </option>\n                      ))}\n                  </select>\n                  {errors.brand && (\n                    <p\n                      className={`error ${\n                        isFormDisabled ? 'opacity-0' : 'opacity-100'\n                      }`}\n                    >\n                      {errors.brand.type === 'required'\n                        ? 'Brand is required'\n                        : errors.brand.message}\n                    </p>\n                  )}\n                </>\n              )}\n            />\n          </div>\n          <div className=\"select-wrapper mb-2\">\n            <label htmlFor=\"price\" className=\"select-label\">\n              Price/ 1 hour\n            </label>\n            <div>\n              <Controller\n                name=\"price\"\n                control={control}\n                rules={{\n                  required: true,\n                  min: {\n                    value: 0,\n                    message: 'Must be 0 or greater',\n                  },\n                }}\n                render={({ field }) => (\n                  <>\n                    <select {...field} className=\"select-price\">\n                      <option value=\"\" className=\"select-placeholder\">\n                        To $\n                      </option>\n                      {price &&\n                        price.map((price, index) => (\n                          <option\n                            key={index}\n                            value={price}\n                            className=\"select-text\"\n                          >\n                            {price}\n                          </option>\n                        ))}\n                    </select>\n                    {errors.price && (\n                      <p\n                        className={`error ${\n                          isFormDisabled ? 'opacity-0' : 'opacity-100'\n                        }`}\n                      >\n                        {errors.price.type === 'required'\n                          ? 'Price is required'\n                          : errors.price.message}\n                      </p>\n                    )}\n                  </>\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"mb-2 flex flex-col\">\n            <label htmlFor=\"minMileage\" className=\"select-label\">\n              Car mileage / km (from)\n            </label>\n            <div className=\"relative flex after:absolute after:inset-y-0 after:right-1/2 after:h-[48px] after:w-[1px] after:bg-[rgba(138,138,137,0.2)] after:content-['']\">\n              <label className=\"relative\">\n                <input\n                  type=\"number\"\n                  className=\"select-from relative m-auto select-text\"\n                  {...register('from', {\n                    required: 'This field is required',\n                    min: {\n                      value: 0,\n                      message: 'Must be 0 or greater',\n                    },\n                  })}\n                />\n                <span className=\"select-placeholder absolute left-3 top-1/2 -translate-y-1/2\">\n                  From\n                </span>\n              </label>\n              <label className=\"relative\">\n                <input\n                  type=\"number\"\n                  className=\"select-to select-text\"\n                  {...register('to', {\n                    required: 'This field is required',\n                    min: {\n                      value: 0,\n                      message: 'Must be 0 or greater',\n                    },\n                    validate: (value, { from }) => {\n                      if (parseInt(value) > parseInt(from)) {\n                        return true;\n                      }\n                      return 'To must be greater than From';\n                    },\n                  })}\n                />\n                <span className=\"select-placeholder absolute left-3 top-1/2 -translate-y-1/2\">\n                  To\n                </span>\n              </label>\n              <p\n                className={`error flex items-center justify-between gap-1 ${\n                  isFormDisabled ? 'opacity-0' : 'opacity-100'\n                }`}\n              >\n                {errors?.from && <span>{errors.from.message}</span>}\n                {errors?.to && <span>{errors.to.message}</span>}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"-mt-6 mb-2 flex flex-wrap items-center justify-center gap-3\">\n          <Button type=\"submit\" className=\"button-search\" label=\"Search\" />\n          <Button\n            type=\"button\"\n            className=\"button-search\"\n            onClick={resetFilterInRedux}\n            label=\"Reset\"\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nFiltersCars.propTypes = {\n  cars: PropTypes.array.isRequired,\n};\n\nexport default FiltersCars;\n","import CarsList from 'components/CarsList/CarsList';\nimport FiltersCars from 'components/FiltersCars/FiltersCars';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCars, selectFilter } from '../redux/cars/carsSelectors';\nimport { getAllCars } from '../redux/cars/carsThunk';\nimport { filterCars } from '../shared/utils';\nimport { setFilter } from '../redux/cars/carsSlise';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const cars = useSelector(selectCars);\n\n  const filter = useSelector(selectFilter);\n\n  const filteredCars = filterCars(cars, filter);\n\n  useEffect(() => {\n    dispatch(getAllCars());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(setFilter(null));\n  }, [dispatch]);\n  return (\n    <>\n      <section>\n        <div>\n          <FiltersCars cars={filteredCars} />\n          {cars?.length > 0 && <CarsList adverts={filteredCars} />}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["adverts","useLoadMore","COUNT_CARS","currentPage","carsLimit","loadMore","indexOfLastCar","className","filteredCars","map","car","CarItem","id","length","Button","label","onClick","cars","filter","useSelector","selectFilter","dispatch","useDispatch","isFormDisabled","useLocation","pathname","price","priceOptions","uniqueBrands","useUniquePropValues","useForm","mode","shouldDisable","register","handleSubmit","control","reset","errors","formState","useEffect","onSubmit","data","setFilter","disabled","htmlFor","name","rules","required","message","render","field","value","make","idx","brand","type","min","index","validate","from","parseInt","to","resetFilter","selectCars","filterCars","getAllCars"],"sourceRoot":""}